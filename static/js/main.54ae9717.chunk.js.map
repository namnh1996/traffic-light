{"version":3,"sources":["logo.svg","components/TrafficLight.js","App.js","reportWebVitals.js","index.js"],"names":["TrafficLight","currentColor","this","props","console","log","className","classNames","active","Component","App","state","setInterval","setState","getNextColor","color","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0PAAe,MAA0B,iC,qCCkD1BA,E,4JAlBX,WACI,IAAOC,EAAgBC,KAAKC,MAArBF,aAEP,OADAG,QAAQC,IAAI,aAAcJ,GACnB,sBAAKK,UAAY,eAAjB,UACH,qBAAKA,UAAWC,IAAW,OAAQ,MAAO,CACtCC,OAjCJ,IAiCYP,MAEZ,qBAAKK,UAAWC,IAAW,OAAQ,SAAU,CACzCC,OAnCD,IAmCSP,MAEZ,qBAAKK,UAAWC,IAAW,OAAQ,QAAS,CACxCC,OArCF,IAqCUP,a,GAnCGQ,aCqCZC,E,kDAnCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACTV,aARI,GAURW,aAAY,WACR,EAAKC,SAAS,CACNZ,aAAc,EAAKa,aAAa,EAAKH,MAAMV,kBAEpD,KATQ,E,gDAYf,SAAac,GACT,OAAOA,GACH,KAnBI,EAoBA,OAnBG,EAoBP,KApBO,EAqBH,OApBE,EAqBN,QACI,OAxBA,K,oBA2BV,WACE,IAAOd,EAAgBC,KAAKS,MAArBV,aACP,OACE,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKU,IAAKC,EAAMX,UAAU,WAAWY,IAAI,SACvC,cAAC,EAAD,CAAcjB,aAAgBA,a,GA7BxBQ,aCGHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54ae9717.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport './TrafficLight.css';\nimport classNames from 'classnames';\n\nconst Red = 0;\nconst Orange = 1;\nconst Green = 2;\n\nclass TrafficLight extends Component {\n    // constructor(){\n    //     super();\n    //     this.state = {\n    //         currentColor: Red\n    //     };\n    //     setInterval(() => {\n    //         this.setState({\n    //                 currentColor: this.getNextColor(this.state.currentColor)\n    //             });\n    //     }, 1000);\n    // }\n\n    // getNextColor(color){\n    //     switch(color){\n    //         case Red: \n    //             return Orange;\n    //         case Orange: \n    //             return Green;\n    //         default: \n    //             return Red;\n    //     }\n    // }\n\n    render(){\n        const {currentColor} = this.props;\n        console.log('Rendering ', currentColor);\n        return <div className = \"TrafficLight\">\n            <div className={classNames('bulb', 'red', {\n                active: currentColor === Red\n            })}/>\n            <div className={classNames('bulb', 'orange', {\n                active: currentColor === Orange\n            })}/>\n            <div className={classNames('bulb', 'green', {\n                active: currentColor === Green\n            })}/>\n            \n        </div>\n    }\n}\n\nexport default TrafficLight;","import logo from './logo.svg';\nimport './App.css';\nimport TrafficLight from './components/TrafficLight';\nimport React, {Component} from 'react';\n\nconst Red = 0;\nconst Orange = 1;\nconst Green = 2;\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n        currentColor: Red\n    };\n    setInterval(() => {\n        this.setState({\n                currentColor: this.getNextColor(this.state.currentColor)\n            });\n    }, 1000);\n}\n\ngetNextColor(color){\n    switch(color){\n        case Red: \n            return Orange;\n        case Orange: \n            return Green;\n        default: \n            return Red;\n    }\n}\n  render(){\n    const {currentColor} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <TrafficLight currentColor = {currentColor}/>\n        </header> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}